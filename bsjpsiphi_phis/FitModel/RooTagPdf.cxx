/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooTagPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 
#include "RooRandom.h"

using namespace std;

 RooTagPdf::RooTagPdf(const char *name, const char *title,
                        RooAbsCategory& _tag, 
                        RooAbsReal& _asymmetry,
                        RooAbsReal& _efficiency) :
   RooAbsPdf(name,title),
   tag("tag","tag",this,_tag), 
   asymmetry("asymmetry","asymmetry",this,_asymmetry),
   efficiency("efficiency","efficiency",this,_efficiency)
 { 
 } 


 RooTagPdf::RooTagPdf(const RooTagPdf& other, const char* name) :  
   RooAbsPdf(other,name),
   tag("tag",this,other.tag), 
   asymmetry("asymmetry",this,other.asymmetry),
   efficiency("efficiency",this,other.efficiency)
 { 
 } 



 Double_t RooTagPdf::evaluate() const 
 { 
   if (tag == -1)
      return efficiency*(1 - asymmetry)/2;
      
   if (tag == 1)
      return efficiency*(1 + asymmetry)/2;
   
   return 1 - efficiency; 
 } 
 
Int_t RooTagPdf::getGenerator(const RooArgSet& directVars, RooArgSet &generateVars, Bool_t /*staticInitOK*/) const 
{ 
  if (matchArgs(directVars,generateVars,tag)) return 1 ;   
  return 0 ; 
} 



void RooTagPdf::generateEvent(Int_t code) 
{ 
  // GENERATE SET OF OBSERVABLES DEFINED BY RETURN CODE ASSIGNED BY getGenerator()
  // RETURN THE GENERATED VALUES BY ASSIGNING THEM TO THE PROXY DATA MEMBERS THAT
  // REPRESENT THE CHOSEN OBSERVABLES
  assert(code==1) ; 
  if (RooRandom::uniform() < efficiency) 
  {
    if (RooRandom::uniform() < (1 + asymmetry)/2)
    {
      tag = 1;
    }
    else
    {
      tag = -1;
    }
  }
  else 
  {
    tag = 0;
  }
  
  return; 
}



