/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROODELTA
#define ROODELTA

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

// RooDelta is a delta PDF
// during evaluation it behaves like a tall rectangle centered in the mean value, with width 2e-4
// during generation it generates like a real delta (as in alwayes returning the mean)
 
class RooDelta : public RooAbsPdf {
public:
  RooDelta() {} ; 
  RooDelta(const char *name, const char *title,
	      RooAbsReal& _x, double mean);
  RooDelta(const RooDelta& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooDelta(*this,newname); }
  inline virtual ~RooDelta() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

  Int_t getGenerator(const RooArgSet& directVars, RooArgSet &generateVars, Bool_t staticInitOK=kTRUE) const;
  void initGenerator(Int_t code) {} ; // optional pre-generation initialization
  void generateEvent(Int_t code);
  Bool_t selfNormalized() const { return true; }

protected:

  RooRealProxy x ;
  double mean;
  
  Double_t evaluate() const ;

private:

  ClassDefInline(RooDelta,1) // Your description goes here...
};
 
#endif
