#include <iostream>
#include <cmath>
#include <cstdlib>
#include <eigen3/Eigen/Eigen>
#include <eigen3/Eigen/Dense>
#include <eigen3/Eigen/Cholesky>

using namespace std;
//using namespace RooFit;
using namespace Eigen;


int main()

{

  typedef float DType;
  using Matrix = Eigen::Matrix<DType, Eigen::Dynamic, Eigen::Dynamic>;
  int n = 10000;
  Matrix x(n,3);
  Matrix y(n,1);
  Eigen::LeastSquaresConjugateGradient<Matrix> gd;
  gd.setMaxIterations(1000);
  gd.setTolerance(0.001) ;
  gd.compute(x);
  auto b = gd.solve(y);
  std::cout<<"coefficient b as it get solved "<< b <<"\n";


  Eigen::Matrixxf new_x(5, 2);
  new_x << 1, 1, 1, 2, 1, 3, 1, 4, 1, 5;
  auto new_y = new_x.array().rowwise() * b.transpose().array();


}
